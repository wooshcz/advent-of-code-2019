import math

intcode = [3,225,1,225,6,6,1100,1,238,225,104,0,1101,48,82,225,102,59,84,224,1001,224,-944,224,4,224,102,8,223,223,101,6,224,224,1,223,224,223,1101,92,58,224,101,-150,224,224,4,224,102,8,223,223,1001,224,3,224,1,224,223,223,1102,10,89,224,101,-890,224,224,4,224,1002,223,8,223,1001,224,5,224,1,224,223,223,1101,29,16,225,101,23,110,224,1001,224,-95,224,4,224,102,8,223,223,1001,224,3,224,1,223,224,223,1102,75,72,225,1102,51,8,225,1102,26,16,225,1102,8,49,225,1001,122,64,224,1001,224,-113,224,4,224,102,8,223,223,1001,224,3,224,1,224,223,223,1102,55,72,225,1002,174,28,224,101,-896,224,224,4,224,1002,223,8,223,101,4,224,224,1,224,223,223,1102,57,32,225,2,113,117,224,101,-1326,224,224,4,224,102,8,223,223,101,5,224,224,1,223,224,223,1,148,13,224,101,-120,224,224,4,224,1002,223,8,223,101,7,224,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,8,677,226,224,102,2,223,223,1006,224,329,101,1,223,223,107,677,677,224,1002,223,2,223,1006,224,344,101,1,223,223,8,226,677,224,102,2,223,223,1006,224,359,101,1,223,223,107,226,226,224,102,2,223,223,1005,224,374,1001,223,1,223,1108,677,226,224,1002,223,2,223,1006,224,389,101,1,223,223,107,677,226,224,102,2,223,223,1006,224,404,1001,223,1,223,1107,226,677,224,1002,223,2,223,1006,224,419,1001,223,1,223,108,677,677,224,102,2,223,223,1005,224,434,1001,223,1,223,1008,677,226,224,1002,223,2,223,1006,224,449,1001,223,1,223,7,226,677,224,1002,223,2,223,1006,224,464,1001,223,1,223,1007,677,677,224,102,2,223,223,1005,224,479,1001,223,1,223,1007,226,226,224,1002,223,2,223,1005,224,494,1001,223,1,223,108,226,226,224,1002,223,2,223,1005,224,509,1001,223,1,223,1007,226,677,224,1002,223,2,223,1006,224,524,101,1,223,223,1107,677,677,224,102,2,223,223,1005,224,539,101,1,223,223,1107,677,226,224,102,2,223,223,1005,224,554,1001,223,1,223,108,677,226,224,1002,223,2,223,1006,224,569,1001,223,1,223,1108,226,677,224,1002,223,2,223,1006,224,584,101,1,223,223,8,677,677,224,1002,223,2,223,1006,224,599,1001,223,1,223,1008,226,226,224,102,2,223,223,1006,224,614,101,1,223,223,7,677,677,224,1002,223,2,223,1006,224,629,101,1,223,223,1008,677,677,224,102,2,223,223,1005,224,644,101,1,223,223,7,677,226,224,1002,223,2,223,1005,224,659,101,1,223,223,1108,226,226,224,102,2,223,223,1006,224,674,1001,223,1,223,4,223,99,226]

# test
#intcode = [3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9]
#intcode = [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99]

print("length: "+str(len(intcode)))

nextind = 0
oldcode = 0
index = -1

while True:
  if nextind > 0:
    index = nextind
    nextind = 0
  else:
    index += 1
  print("Index: "+str(index))

  code = intcode[index]
  strcode = str(code).zfill(5)
  opcode = int(strcode[-2:])
  if opcode == 99:
    print("haltcode")
    break

  mode = strcode[0:-2]
  print(mode + " | " + str(opcode))
  mode1 = int(mode[2])
  mode2 = int(mode[1])
  mode3 = int(mode[0])
  arg1pos = intcode[index+1]
  arg2pos = intcode[index+2]
  arg3pos = intcode[index+3]
  if opcode in [1, 2]:
    arg3 = intcode[arg3pos]
  if opcode in [1, 2, 4, 5, 6, 7, 8]:
    if mode1 == 1:
      arg1 = arg1pos
    else:
      arg1 = intcode[arg1pos]
  if opcode in [1, 2, 5, 6, 7, 8]:
    if mode2 == 1:
      arg2 = arg2pos
    else:
      arg2 = intcode[arg2pos]

  if opcode == 1:
    #print("addition of " + str(arg1) + " and " + str(arg2) + " stored into: " + str(arg3pos))
    oldcode = arg3
    intcode[arg3pos] = arg1 + arg2
    #print(str(oldcode) + " --> " + str(intcode[arg3pos]))
    nextind = index+4

  elif opcode == 2:
    #print("multiplication of " + str(arg1) + " and " + str(arg2) + " stored into: " + str(arg3pos))
    oldcode = arg3
    intcode[arg3pos] = arg1 * arg2
    #print(str(oldcode) + " --> " + str(intcode[arg3pos]))
    nextind = index+4

  elif opcode == 3:
    value = input("Enter single integer value: ")
    intcode[arg1pos] = int(value)
    nextind = index+2

  elif opcode == 4:
    print("Output from execution: %d" % (arg1))
    nextind = index+2

  # jump-if-true
  elif opcode == 5:
    if arg1 != 0:
      nextind = arg2
    else:
      nextind = index+3

  # jump-if-false
  elif opcode == 6:
    if arg1 == 0:
      nextind = arg2
    else:
      nextind = index+3

  # 1st less than 2nd
  elif opcode == 7:
    if arg1 < arg2:
      intcode[arg3pos] = 1
    else:
      intcode[arg3pos] = 0
    nextind = index+4

  # 1st equals 2nd
  elif opcode == 8:
    if arg1 == arg2:
      intcode[arg3pos] = 1
    else:
      intcode[arg3pos] = 0
    nextind = index+4
  
  else:
    print("error")
    break

print(intcode)
